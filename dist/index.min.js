/*! alm-tasker.js 1.0.0 (c) 2022 alumican, licensed under the MIT, more information https://github.com/alumican/alm-tasker.js */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("alm_coreutil"),require("alm_animframe")):"function"==typeof define&&define.amd?define(["exports","alm_coreutil","alm_animframe"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).tasker=t.tasker||{},t.alm_coreutil,t.alm_animframe)}(this,(function(t,e,s){"use strict";var i,n;!function(t){t.complete="complete"}(i||(i={}));class r extends CustomEvent{constructor(t){super(t)}}!function(t){t[t.sleeping=0]="sleeping",t[t.running=1]="running",t[t.interrupting=2]="interrupting"}(n||(n={}));class l extends EventTarget{constructor(){super(),this.state=n.sleeping,this.self=this,this.parent=null}run(){if(this.state>n.sleeping)throw new Error("[Task.run] + Task is already running.");this.state=n.running,this.implRun.call(this,this)}interrupt(){this.state===n.running&&(this.state=n.interrupting,this.implInterrupt.call(this,this))}dispose(){this.state=n.sleeping,this.implDispose.call(this,this),this.parent=null}notifyComplete(){switch(this.state){case n.sleeping:break;case n.running:case n.interrupting:this.dispatchEvent(new r(i.complete)),this.dispose()}}getState(){return this.state}getParent(){return this.parent}setParent(t){this.parent=t}getSelf(){return this.self}}class a extends l{constructor(t,e=null,s=null,i=null){super(),this.completeHandler=t=>{this.notifyComplete()},this.f=t,this.args=e,this.eventTarget=s,this.eventType=i}implRun(t){e.Type.isFunction(this.f)?this.eventTarget&&this.eventType?(this.eventTarget.addEventListener(this.eventType,this.completeHandler),this.args?this.f(...this.args):this.f()):(this.args?this.f(...this.args):this.f(),this.notifyComplete()):this.notifyComplete()}implInterrupt(t){this.eventTarget&&this.eventType&&this.eventTarget.removeEventListener(this.eventType,this.completeHandler)}implDispose(t){this.eventTarget&&this.eventType&&this.eventTarget.removeEventListener(this.eventType,this.completeHandler),this.f=null,this.args=null,this.eventTarget=null,this.eventType=null}}class o extends l{constructor(){super()}implRun(t){this.notifyComplete()}implInterrupt(t){}implDispose(t){}}class h extends l{constructor(...t){super(),this.tasks=[],this.addTask(...t)}addTask(...t){t.length>0&&(this.preProcess(t),this.tasks=this.getTasks().concat(t))}insertTask(...t){this.insertTaskAt(0,...t)}insertTaskAt(t,...e){e.length>0&&(this.preProcess(e),Array.prototype.splice.apply(this.getTasks(),[t,0].concat(e)))}addTaskArray(t){this.addTask(...t)}insertTaskArray(t){this.insertTask(...t)}insertTaskArrayAt(t,e){this.insertTaskAt(t,...e)}getLength(){return this.tasks.length}getTaskByIndex(t){return this.tasks[t]}getTasks(){return this.tasks}preProcess(t){const s=t.length;let i;for(let n=0;n<s;++n)i=t[n],i?e.Type.isFunction(i)&&(t[n]=i=new a(i)):t[n]=i=new o,i.setParent(this)}implRun(t){this.notifyComplete()}implInterrupt(t){}implDispose(t){}}var p,u=Object.freeze({__proto__:null,Task:l,TaskList:h,get TaskState(){return n},get TaskEventType(){return i},TaskEvent:r});class c extends l{constructor(){super()}implRun(t){const e=this.getParent().notifyBreak;e&&e(),this.notifyComplete()}implInterrupt(t){}implDispose(t){}}class m extends l{constructor(t){super(),this.f=t}implRun(t){e.Type.isFunction(this.f)?this.f((()=>{this.notifyComplete()})):this.notifyComplete()}implInterrupt(t){}implDispose(t){this.f=null}}class d extends l{constructor(t,e,s){super(),this.completeHandler=t=>{this.selectedTask.removeEventListener(i.complete,this.completeHandler),this.selectedTask=null,this.notifyComplete()},this.condition=t,this.then=e,this.reject=s,this.selectedTask=null}implRun(t){let s;s=e.Type.isFunction(this.condition)?this.condition():this.condition,s?this.then&&(this.selectedTask=this.then):this.reject&&(this.selectedTask=this.reject),this.selectedTask?(this.selectedTask.addEventListener(i.complete,this.completeHandler),this.selectedTask.run()):this.notifyComplete()}implInterrupt(t){this.selectedTask&&(this.selectedTask.removeEventListener(i.complete,this.completeHandler),this.selectedTask.interrupt(),this.selectedTask=null)}implDispose(t){this.selectedTask&&(this.selectedTask.removeEventListener(i.complete,this.completeHandler),this.selectedTask.dispose(),this.selectedTask=null),this.condition=null,this.then=null,this.reject=null}}class T extends l{constructor(t,e){super(),this.completeHandler=t=>{this.notifyComplete()},this.eventTarget=t,this.eventType=e}implRun(t){this.eventTarget&&this.eventType&&this.eventTarget.addEventListener(this.eventType,this.completeHandler)}implInterrupt(t){this.eventTarget&&this.eventType&&this.eventTarget.removeEventListener(this.eventType,this.completeHandler)}implDispose(t){this.eventTarget&&this.eventType&&this.eventTarget.removeEventListener(this.eventType,this.completeHandler),this.eventType=null,this.eventTarget=null}}class g extends l{constructor(...t){super(),this.messages=t}implRun(t){console.log.apply(console,Array.prototype.slice.call(this.messages)),this.notifyComplete()}implInterrupt(t){}implDispose(t){this.messages=null}}class y extends h{constructor(...t){super(...t),this.completeHandler=t=>{++this.completeCount>=this.getLength()&&this.notifyComplete()},this.completeCount=0}addTask(...t){super.addTask(...t)}insertTask(...t){this.addTask(...t)}addTaskArray(t){this.addTask(...t)}insertTaskArray(t){this.addTask(...t)}implRun(t){this.completeCount=0;const e=this.getLength();if(e>0){const t=this.getTasks();let s;for(let n=0;n<e;++n)s=t[n],s.addEventListener(i.complete,this.completeHandler),s.run()}else this.notifyComplete()}implInterrupt(t){const e=this.getLength();if(e>0){const t=this.getTasks();let s;for(let n=0;n<e;++n)s=t[n],s.removeEventListener(i.complete,this.completeHandler),s.interrupt()}super.implInterrupt(t)}implDispose(t){const e=this.getLength();if(e>0){const t=this.getTasks();let s;for(let n=0;n<e;++n)s=t[n],s.removeEventListener(i.complete,this.completeHandler),s.dispose()}super.implDispose(t)}implNotifyBreak(){const t=this.getLength();if(t>0){const e=this.getTasks();let s;for(let r=0;r<t;++r)s=e[r],s.getState()===n.running&&(s.removeEventListener(i.complete,this.completeHandler),s.interrupt())}this.notifyComplete()}implNotifyReturn(){const t=this.getLength();if(t>0){const e=this.getTasks();let s;for(let r=0;r<t;++r)s=e[r],s.getState()===n.running&&(s.removeEventListener(i.complete,this.completeHandler),s.interrupt())}const e=this.getParent().notifyReturn;e&&e(),this.dispose()}}class f extends l{constructor(){super()}implRun(t){const e=this.getParent().notifyReturn;e&&e(),this.notifyComplete()}implInterrupt(t){}implDispose(t){}}class v extends h{constructor(...t){super(...t),this.completeHandler=t=>{this.currentTask.removeEventListener(i.complete,this.completeHandler),this.currentTask=null,++this.position>=this.getLength()?this.notifyComplete():this.next()},this.currentTask=null,this.position=-1,this.isPaused=!1,this.isCompleteOnPaused=!1}addTask(...t){super.addTask(...t)}insertTask(...t){super.insertTaskAt(this.position+1,...t)}addTaskArray(t){this.addTask(...t)}insertTaskArray(t){this.insertTask(...t)}next(){this.currentTask=this.getTaskByIndex(this.position),this.currentTask.addEventListener(i.complete,this.completeHandler),this.currentTask.run()}implRun(t){this.position=0,this.getLength()>0?this.next():this.notifyComplete()}implInterrupt(t){this.currentTask&&(this.currentTask.removeEventListener(i.complete,this.completeHandler),this.currentTask.interrupt(),this.currentTask=null),this.position=-1,super.implInterrupt(t)}implDispose(t){this.currentTask&&(this.currentTask.removeEventListener(i.complete,this.completeHandler),this.currentTask.dispose(),this.currentTask=null),this.position=-1,this.isPaused=!1,this.isCompleteOnPaused=!1,super.implDispose(t)}implNotifyBreak(){this.currentTask.getState()===n.running&&(this.currentTask.removeEventListener(i.complete,this.completeHandler),this.currentTask.interrupt()),this.notifyComplete()}implNotifyReturn(){this.currentTask.getState()===n.running&&(this.currentTask.removeEventListener(i.complete,this.completeHandler),this.currentTask.interrupt());const t=this.getParent().notifyReturn;t&&t(),this.dispose()}}!function(t){t.play="play",t.stop="stop",t.reset="reset",t.jump="jump",t.update="update",t.complete="complete"}(p||(p={}));class k extends CustomEvent{constructor(t){super(t)}}class E extends l{constructor(t,i){super(),this.requestAnimationFrameHandler=()=>{this.isPlaying&&(this.elapsedTime=e.DateUtil.now()-this.startTime,this.elapsedTime>=this.duration?(this.elapsedTime=this.duration,this.apply(1),s.AnimFrame.removeEventListener(this.requestAnimationFrameHandler),this.dispatchEvent(new k(p.update)),this.isPlaying=!1,this.dispatchEvent(new k(p.complete)),this.notifyComplete()):(this.apply(this.elapsedTime/this.duration),this.dispatchEvent(new k(p.update))))},this.playHandler=()=>{this.onPlayFunction&&this.onPlayFunction(this)},this.stopHandler=()=>{this.onStopFunction&&this.onStopFunction(this)},this.resetHandler=()=>{this.onResetFunction&&this.onResetFunction(this)},this.jumpHandler=()=>{this.onJumpFunction&&this.onJumpFunction(this)},this.updateHandler=()=>{this.onUpdateFunction&&this.onUpdateFunction(this)},this.completeHandler=()=>{this.onCompleteFunction&&this.onCompleteFunction(this)},this.duration=t,this.easing=i,this.targets=[],this.isPlaying=!1,this.isPaused=!1,this.progressTime=0,this.progressValue=this.easing(this.progressTime),this.addEventListener(p.play,this.playHandler),this.addEventListener(p.stop,this.stopHandler),this.addEventListener(p.reset,this.resetHandler),this.addEventListener(p.jump,this.jumpHandler),this.addEventListener(p.update,this.updateHandler),this.addEventListener(p.complete,this.completeHandler)}target(t,e,s,i){return this.targets.push({scope:t,property:e,to:s,from:null==i?void 0:i.from,suffix:null==i?void 0:i.suffix,prefix:null==i?void 0:i.prefix,_from:null,_value:null}),this}onPlay(t){return this.onPlayFunction=t,this}onStop(t){return this.onStopFunction=t,this}onReset(t){return this.onResetFunction=t,this}onJump(t){return this.onJumpFunction=t,this}onUpdate(t){return this.onUpdateFunction=t,this}onComplete(t){return this.onCompleteFunction=t,this}implRun(t){this.isPlaying||1===this.progressTime||(this.isPlaying=!0,this.isPaused?(this.isPaused=!1,this.startTime=e.DateUtil.now()-this.elapsedTimePaused,s.AnimFrame.addEventListener(this.requestAnimationFrameHandler),this.dispatchEvent(new k(p.play))):(this.prepare(),this.startTime=e.DateUtil.now(),this.elapsedTime=0,this.duration>0?(this.apply(0),s.AnimFrame.addEventListener(this.requestAnimationFrameHandler),this.dispatchEvent(new k(p.play))):(this.apply(0),this.dispatchEvent(new k(p.play)),this.apply(1),this.dispatchEvent(new k(p.update)),this.isPlaying=!1,this.dispatchEvent(new k(p.complete)))))}implInterrupt(t){this.implDispose(t)}implDispose(t){s.AnimFrame.removeEventListener(this.requestAnimationFrameHandler),this.isPlaying=!1,this.isPaused=!1,this.targets=null,this.easing=null,this.onPlayFunction=null,this.onStopFunction=null,this.onResetFunction=null,this.onJumpFunction=null,this.onUpdateFunction=null,this.onCompleteFunction=null}stop(){this.isPlaying&&(this.isPlaying=!1,this.isPaused=!0,this.elapsedTimePaused=this.elapsedTime,s.AnimFrame.removeEventListener(this.requestAnimationFrameHandler),this.dispatchEvent(new k(p.stop)))}togglePlaying(){this.isPlaying?this.stop():this.run()}reset(){this.isPlaying&&(this.isPlaying=!1,this.elapsedTime=0,this.apply(0),s.AnimFrame.removeEventListener(this.requestAnimationFrameHandler),this.dispatchEvent(new k(p.reset)))}jump(t){this.progressTime!==t&&(this.elapsedTime=t*this.duration,this.isPlaying&&(this.startTime=e.DateUtil.now()-this.elapsedTime),this.isPaused&&(this.elapsedTimePaused=this.elapsedTime),this.prepare(),this.apply(t),this.dispatchEvent(new k(p.jump)))}prepare(){const t=this.targets.length;for(let s=0;s<t;++s){const t=this.targets[s];t._from=e.Type.isNumber(t.from)?t.from:E.getValue(t)}}apply(t){this.progressTime=t,this.progressValue=this.easing(this.progressTime);const e=this.targets.length;for(let t=0;t<e;++t){const e=this.targets[t];E.setValue(e,E.map(this.progressValue,e._from,e.to))}}static map(t,e,s){return t*(s-e)+e}static setValue(t,e){t._value=e,E.setProperty(e,t.scope,t.property,t.prefix,t.suffix)}static getValue(t){return t._value=E.getProperty(t.scope,t.property,t.prefix,t.suffix)}static setProperty(t,e,s,i,n){i&&(t=i+t),n&&(t+=n),e[s]=t}static getProperty(t,e,s,i){return s||i?parseFloat(t[e])||0:t[e]}getIsPlaying(){return this.isPlaying}getProgressTime(){return this.progressTime}getProgressValue(){return this.progressValue}getDuration(){return this.duration}}class P extends l{constructor(t){super(),this.completeHandler=()=>{this.notifyComplete()},this.time=t,this.timerId=-1}implRun(t){this.time>0?this.timerId=window.setTimeout(this.completeHandler,this.time):this.notifyComplete()}implInterrupt(t){this.cancel()}implDispose(t){this.cancel()}cancel(){-1!==this.timerId&&(clearTimeout(this.timerId),this.timerId=-1)}}var H=Object.freeze({__proto__:null,Break:c,Call:a,Callback:m,If:d,Listen:T,Log:g,Nop:o,Parallel:y,Return:f,Serial:v,get TweenEventType(){return p},TweenEvent:k,Tween:E,Delay:P});t._core=u,t._task=H,t.br=function(){return new c},t.branch=function(t,e,s){return new d(t,e,s)},t.call=function(t,e=null,s=null,i=null){return new a(t,e,s,i)},t.callback=function(t){return new m(t)},t.delay=function(t){return new P(t)},t.dispose=function(t){return t&&t.dispose(),null},t.listen=function(t,e){return new T(t,e)},t.log=function(...t){return new(Function.prototype.bind.call(g,null,...t))},t.nop=function(){return new o},t.parallel=function(...t){return new(Function.prototype.bind.call(y,null,...t))},t.ret=function(){return new f},t.serial=function(...t){return new(Function.prototype.bind.call(v,null,...t))},t.tween=function(t,e){return new E(t,e)},Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=index.min.js.map
