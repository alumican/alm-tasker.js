import { EasingFunction } from 'alm_coreutil';
import { Callback, CallbackFunction } from './task/Callback';
import { Call } from './task/Call';
import { Delay } from './task/Delay';
import { Parallel } from './task/Parallel';
import { Serial } from './task/Serial';
import { Task } from './core/Task';
import { Break } from './task/Break';
import { Return } from './task/Return';
import { Nop } from './task/Nop';
import { Condition, If } from './task/If';
import { Listen } from './task/Listen';
import { Log } from './task/Log';
import { Tween } from './task/Tween';
export declare function call(f: Function, args?: any[], eventTarget?: EventTarget, eventType?: string): Call;
export declare function callback(f: CallbackFunction): Callback;
export declare function delay(time: number): Delay;
export declare function branch(condition: Condition, then: Task, reject: Task): If;
export declare function listen(eventTarget: EventTarget, eventType: string): Listen;
export declare function log(...messages: any[]): Log;
export declare function tween(duration: number, easing: EasingFunction): Tween;
export declare function serial(...tasks: (Task | Function)[]): Serial;
export declare function parallel(...tasks: (Task | Function)[]): Parallel;
export declare function br(): Break;
export declare function ret(): Return;
export declare function nop(): Nop;
